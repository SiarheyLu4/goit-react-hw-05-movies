{"version":3,"file":"static/js/583.8d39f81e.chunk.js","mappings":"mQAuEMA,EAAMC,EAAAA,GAAAA,IAAH,wCAGHC,EAAKD,EAAAA,GAAAA,GAAH,gFAKFE,EAAKF,EAAAA,GAAAA,GAAH,2HAOR,UA/EiB,WAEf,OAA0BG,EAAAA,EAAAA,UAAS,CACjCC,KAAM,CAAC,EACPC,SAAS,EACTC,MAAO,OAHT,eAAOC,EAAP,KAAcC,EAAd,KASQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdJ,GAAS,SAAAK,GAAS,yBACbA,GADa,IAEhBR,SAAS,EACTC,MAAO,MAHS,IAFJ,UAOOQ,EAAAA,EAAAA,IAAQL,GAPf,OAORM,EAPQ,OAQdP,GAAS,SAAAK,GACP,OAAO,kBACFA,GADL,IAEET,KAAMW,GAET,IAba,gDAedP,GAAS,SAAAK,GAAS,yBACbA,GADa,IAEhBP,MAAK,MAFW,IAfJ,yBAqBdE,GAAS,SAAAK,GACP,OAAO,kBACFA,GADL,IAEER,SAAS,GAEZ,IA1Ba,4EAAH,qDA8BfO,GACD,GAAE,CAACH,EAAID,IAER,IAAQQ,EAAST,EAAMH,KAAfY,KAER,OACE,0BACE,SAACf,EAAD,UACGe,GAAQA,EAAKC,KAAI,gBAAER,EAAF,EAAEA,GAAIS,EAAN,EAAMA,aAAcC,EAApB,EAAoBA,KAAMC,EAA1B,EAA0BA,UAA1B,OACd,UAAClB,EAAD,YACE,SAACH,EAAD,CAAKsB,IAAKH,EAAY,yCAAqCA,GAAiBI,EAAOC,IAAKJ,KACxF,wBAAKA,KACL,uCAAeC,OAHRX,EADK,OAUzB,C,qLCpEKe,EAAM,+BACNC,EAAM,mCAECC,EAAgB,mCAAG,+GAELC,MAAM,GAAD,OAAIH,EAAJ,uCAAsCC,IAFtC,cAEtBG,EAFsB,gBAGPA,EAASC,OAHF,cAGtBC,EAHsB,yBAKrBA,EAAOC,SALc,kCAO5BC,QAAQC,IAAR,MAP4B,0DAAH,qDAWhBC,EAAgB,mCAAG,WAAOzB,GAAP,kGAELkB,MAAM,GAAD,OAAIH,EAAJ,kBAAiBf,EAAjB,oBAA+BgB,IAF/B,cAEtBG,EAFsB,gBAGRA,EAASC,OAHD,cAGtBM,EAHsB,yBAKrBA,GALqB,kCAO5BH,QAAQC,IAAR,MAP4B,0DAAH,sDAWhBG,EAAe,mCAAG,WAAOC,GAAP,kGAEJV,MAAM,GAAD,OAAIH,EAAJ,iCAAgCC,EAAhC,kBAA6CY,IAF9C,cAErBT,EAFqB,gBAGNA,EAASC,OAHH,cAGrBC,EAHqB,yBAKpBA,EAAOC,SALa,kCAO3BC,QAAQC,IAAR,MAP2B,0DAAH,sDAWfnB,EAAO,mCAAG,WAAOL,GAAP,kGAEIkB,MAAM,GAAD,OAAIH,EAAJ,kBAAiBf,EAAjB,4BAAuCgB,IAFhD,cAEbG,EAFa,gBAGAA,EAASC,OAHT,cAGbb,EAHa,yBAKZA,GALY,kCAOnBgB,QAAQC,IAAR,MAPmB,0DAAH,sDAWPK,EAAU,mCAAG,WAAO7B,GAAP,kGAECkB,MAAM,GAAD,OAAIH,EAAJ,kBAAiBf,EAAjB,4BAAuCgB,IAF7C,cAEhBG,EAFgB,gBAGAA,EAASC,OAHT,cAGhBU,EAHgB,yBAKfA,GALe,kCAOtBP,QAAQC,IAAR,MAPsB,0DAAH,qD","sources":["pages/CastPage/CastPage.jsx","shared/api/apiMovies.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { getCast } from \"shared/api/apiMovies\";\nimport smail from '../../Images/smail.jpg'\n\nconst CastPage = () => {\n\n  const [state, setState] = useState({\n    item: {},\n    loading: false,\n    error: null,\n  });\n\n  // const params = useParams();\n  // console.log(params);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async() => {\n      try {\n        setState(prevState => ({\n          ...prevState,\n          loading: true,\n          error: null,\n      }));\n        const result = await getCast(id);\n        setState(prevState => {\n          return {\n            ...prevState,\n            item: result,\n          }\n        })\n      } catch (error) {\n        setState(prevState => ({\n          ...prevState,\n          error,\n        }))\n      }\n      finally {\n        setState(prevState => {\n          return {\n            ...prevState,\n            loading: false,\n          }\n        })\n      }\n    };\n\n    fetchCast();\n  }, [id, setState]);\n\n  const { cast } = state.item;\n\n  return (\n    <div>\n      <Ul>\n        {cast && cast.map(({id, profile_path, name, character}) => (\n            <Li key={id}>\n              <Img src={profile_path ? `https://image.tmdb.org/t/p/w500${profile_path}` : smail} alt={name} />\n              <h3>{name}</h3>\n              <p>Character: {character}</p>\n            </Li>\n          ))}\n      </Ul>\n    </div>\n  )\n}\n\nconst Img = styled.img`\n  width: 50px;\n`\nconst Ul = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin: -15px;\n`\nconst Li = styled.li`\n  list-style: none;\n  flex-basis: calc(100% / 5 - 30px);\n  margin: 15px;\n  text-align: center;\n`\n\nexport default CastPage;","\nconst URL = 'https://api.themoviedb.org/3';\nconst KEY = 'b562b6919245407f9980120c8923230e';\n\nexport const getPopularMovies = async () => {\n  try {\n    const response = await fetch(`${URL}/trending/movie/day?api_key=${KEY}`);\n    const movies = await response.json();\n    // console.log(movies);\n    return movies.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getFullInfoMovie = async (id) => {\n  try {\n    const response = await fetch(`${URL}/movie/${id}?api_key=${KEY}`);\n    const movie = await response.json();\n    // console.log(movie);\n    return movie;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchMovies = async (query) => { \n  try {\n    const response = await fetch(`${URL}/search/movie?api_key=${KEY}&query=${query}`);\n    const movies = await response.json();\n    // console.log(movies);\n    return movies.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCast = async (id) => {\n  try {\n    const response = await fetch(`${URL}/movie/${id}/credits?api_key=${KEY}`);\n    const cast = await response.json();\n    // console.log(cast);\n    return cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviews = async (id) => {\n  try {\n    const response = await fetch(`${URL}/movie/${id}/reviews?api_key=${KEY}`);\n    const reviews = await response.json();\n    // console.log(reviews);\n    return reviews;\n  } catch (error) {\n    console.log(error);\n  }\n};"],"names":["Img","styled","Ul","Li","useState","item","loading","error","state","setState","id","useParams","useEffect","fetchCast","prevState","getCast","result","cast","map","profile_path","name","character","src","smail","alt","URL","KEY","getPopularMovies","fetch","response","json","movies","results","console","log","getFullInfoMovie","movie","getSearchMovies","query","getReviews","reviews"],"sourceRoot":""}