{"version":3,"file":"static/js/249.4767a9a9.chunk.js","mappings":"wPAyEMA,EAAKC,EAAAA,GAAAA,GAAH,wBAEFC,EAAKD,EAAAA,GAAAA,GAAH,yCAIR,UAzEqB,WACrB,OAA0BE,EAAAA,EAAAA,UAAS,CAC/BC,MAAO,GACPC,SAAS,EACTC,MAAO,OAHX,eAAOC,EAAP,KAAcC,EAAd,KASUC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdJ,GAAS,SAAAK,GAAS,yBACbA,GADa,IAEhBR,SAAS,EACTC,MAAO,MAHS,IAFJ,UAOOQ,EAAAA,EAAAA,IAAWL,GAPlB,OAORM,EAPQ,OAQdP,GAAS,SAAAK,GACP,OAAO,kBACFA,GADL,IAEET,MAAOW,GAEV,IAba,gDAedP,GAAS,SAAAK,GAAS,yBACbA,GADa,IAEhBP,MAAK,MAFW,IAfJ,yBAqBdE,GAAS,SAAAK,GACP,OAAO,kBACFA,GADL,IAEER,SAAS,GAEZ,IA1Ba,4EAAH,qDA8BfO,GACD,GAAE,CAACH,EAAID,IAER,IAAQJ,EAA0BG,EAA1BH,MAAOC,EAAmBE,EAAnBF,QAASC,EAAUC,EAAVD,MAElBU,EAAWZ,EAAMa,KAAI,gBAAGR,EAAH,EAAGA,GAAIS,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACzB,UAACjB,EAAD,YACE,qCAAagB,MACb,uBAAIC,MAFGV,EADgB,IAS3B,OAFAW,QAAQC,IAAIL,IAGV,2BACGZ,EAAMkB,OAAS,GAAK,UAACtB,EAAD,eAAMgB,EAAN,QAClB,qEACFX,IAAW,0CACXC,IAAS,mDAGf,C,qLCtEKiB,EAAM,+BACNC,EAAM,mCAECC,EAAgB,mCAAG,+GAELC,MAAM,GAAD,OAAIH,EAAJ,uCAAsCC,IAFtC,cAEtBG,EAFsB,gBAGPA,EAASC,OAHF,cAGtBC,EAHsB,yBAKrBA,EAAOC,SALc,kCAO5BV,QAAQC,IAAR,MAP4B,0DAAH,qDAWhBU,EAAgB,mCAAG,WAAOtB,GAAP,kGAELiB,MAAM,GAAD,OAAIH,EAAJ,kBAAiBd,EAAjB,oBAA+Be,IAF/B,cAEtBG,EAFsB,gBAGRA,EAASC,OAHD,cAGtBI,EAHsB,yBAKrBA,GALqB,kCAO5BZ,QAAQC,IAAR,MAP4B,0DAAH,sDAWhBY,EAAe,mCAAG,WAAOC,GAAP,kGAEJR,MAAM,GAAD,OAAIH,EAAJ,iCAAgCC,EAAhC,kBAA6CU,IAF9C,cAErBP,EAFqB,gBAGNA,EAASC,OAHH,cAGrBC,EAHqB,yBAKpBA,EAAOC,SALa,kCAO3BV,QAAQC,IAAR,MAP2B,0DAAH,sDAWfc,EAAO,mCAAG,WAAO1B,GAAP,kGAEIiB,MAAM,GAAD,OAAIH,EAAJ,kBAAiBd,EAAjB,4BAAuCe,IAFhD,cAEbG,EAFa,gBAGAA,EAASC,OAHT,cAGbQ,EAHa,yBAKZA,GALY,kCAOnBhB,QAAQC,IAAR,MAPmB,0DAAH,sDAWPP,EAAU,mCAAG,WAAOL,GAAP,kGAECiB,MAAM,GAAD,OAAIH,EAAJ,kBAAiBd,EAAjB,4BAAuCe,IAF7C,cAEhBG,EAFgB,gBAGAA,EAASC,OAHT,cAGhBS,EAHgB,OAItBjB,QAAQC,IAAIgB,GAJU,kBAKfA,EAAQP,SALO,kCAOtBV,QAAQC,IAAR,MAPsB,0DAAH,qD","sources":["pages/ReviewsPages/ReviewsPages.jsx","shared/api/apiMovies.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { getReviews } from \"shared/api/apiMovies\";\n  \nconst ReviewsPages = () => {\nconst [state, setState] = useState({\n    items: [],\n    loading: false,\n    error: null,\n  });\n\n  // const params = useParams();\n  // console.log(params);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async() => {\n      try {\n        setState(prevState => ({\n          ...prevState,\n          loading: true,\n          error: null,\n      }));\n        const result = await getReviews(id);\n        setState(prevState => {\n          return {\n            ...prevState,\n            items: result,\n          }\n        })\n      } catch (error) {\n        setState(prevState => ({\n          ...prevState,\n          error,\n        }))\n      }\n      finally {\n        setState(prevState => {\n          return {\n            ...prevState,\n            loading: false,\n          }\n        })\n      }\n    };\n\n    fetchCast();\n  }, [id, setState]);\n\n  const { items, loading, error } = state;\n\n  const elements = items.map(({ id, author, content }) => (\n    <Li key={id}>\n      <h3>Author: {author}</h3>\n      <p>{content}</p>\n    </Li>\n  ));\n\n  console.log(elements);\n\n  return (\n    <div>\n      {items.length > 0 ? (<Ul> {elements} </Ul>) :\n        (<p>We don't have any revuews for this movies</p>)}\n      {loading && <p>Loading movies</p>}\n      {error && <p>Loading movies failed</p>}\n    </div>\n  )\n}\n\nconst Ul = styled.ul`\n`\nconst Li = styled.li`\n  margin: 12px;\n`\n\nexport default ReviewsPages;","\nconst URL = 'https://api.themoviedb.org/3';\nconst KEY = 'b562b6919245407f9980120c8923230e';\n\nexport const getPopularMovies = async () => {\n  try {\n    const response = await fetch(`${URL}/trending/movie/day?api_key=${KEY}`);\n    const movies = await response.json();\n    // console.log(movies);\n    return movies.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getFullInfoMovie = async (id) => {\n  try {\n    const response = await fetch(`${URL}/movie/${id}?api_key=${KEY}`);\n    const movie = await response.json();\n    // console.log(movie);\n    return movie;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchMovies = async (query) => { \n  try {\n    const response = await fetch(`${URL}/search/movie?api_key=${KEY}&query=${query}`);\n    const movies = await response.json();\n    // console.log(movies);\n    return movies.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCast = async (id) => {\n  try {\n    const response = await fetch(`${URL}/movie/${id}/credits?api_key=${KEY}`);\n    const cast = await response.json();\n    // console.log(cast);\n    return cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviews = async (id) => {\n  try {\n    const response = await fetch(`${URL}/movie/${id}/reviews?api_key=${KEY}`);\n    const reviews = await response.json();\n    console.log(reviews);\n    return reviews.results;\n  } catch (error) {\n    console.log(error);\n  }\n};"],"names":["Ul","styled","Li","useState","items","loading","error","state","setState","id","useParams","useEffect","fetchCast","prevState","getReviews","result","elements","map","author","content","console","log","length","URL","KEY","getPopularMovies","fetch","response","json","movies","results","getFullInfoMovie","movie","getSearchMovies","query","getCast","cast","reviews"],"sourceRoot":""}