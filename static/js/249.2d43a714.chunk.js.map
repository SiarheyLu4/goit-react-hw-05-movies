{"version":3,"file":"static/js/249.2d43a714.chunk.js","mappings":"wPAoEMA,EAAIC,EAAAA,GAAAA,EAAH,yCAGDC,EAAKD,EAAAA,GAAAA,GAAH,yCAIR,UArEqB,WACrB,OAA0BE,EAAAA,EAAAA,UAAS,CAC/BC,KAAM,CAAC,EACPC,SAAS,EACTC,MAAO,OAHX,eAAOC,EAAP,KAAcC,EAAd,KASUC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdJ,GAAS,SAAAK,GAAS,yBACbA,GADa,IAEhBR,SAAS,EACTC,MAAO,MAHS,IAFJ,UAOOQ,EAAAA,EAAAA,IAAWL,GAPlB,OAORM,EAPQ,OAQdP,GAAS,SAAAK,GACP,OAAO,kBACFA,GADL,IAEET,KAAMW,GAET,IAba,gDAedP,GAAS,SAAAK,GAAS,yBACbA,GADa,IAEhBP,MAAK,MAFW,IAfJ,yBAqBdE,GAAS,SAAAK,GACP,OAAO,kBACFA,GADL,IAEER,SAAS,GAEZ,IA1Ba,4EAAH,qDA8BfO,GACD,GAAE,CAACH,EAAID,IAER,IAAQQ,EAAYT,EAAMH,KAAlBY,QAER,OACE,0BACE,wBACGA,EAAQC,OAAS,EAAID,EAAQE,KAAI,gBAAGT,EAAH,EAAGA,GAAIU,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAC9B,UAAClB,EAAD,YACE,qCAAaiB,MACb,uBAAIC,MAFGX,EADqB,KAK3B,SAACT,EAAD,0DAId,C,qLCjEKqB,EAAM,+BACNC,EAAM,mCAECC,EAAgB,mCAAG,+GAELC,MAAM,GAAD,OAAIH,EAAJ,uCAAsCC,IAFtC,cAEtBG,EAFsB,gBAGPA,EAASC,OAHF,cAGtBC,EAHsB,yBAKrBA,EAAOX,SALc,kCAO5BY,QAAQC,IAAR,MAP4B,0DAAH,qDAWhBC,EAAgB,mCAAG,WAAOrB,GAAP,kGAELe,MAAM,GAAD,OAAIH,EAAJ,kBAAiBZ,EAAjB,oBAA+Ba,IAF/B,cAEtBG,EAFsB,gBAGRA,EAASC,OAHD,cAGtBK,EAHsB,yBAKrBA,GALqB,kCAO5BH,QAAQC,IAAR,MAP4B,0DAAH,sDAWhBG,EAAe,mCAAG,WAAOC,GAAP,kGAEJT,MAAM,GAAD,OAAIH,EAAJ,iCAAgCC,EAAhC,kBAA6CW,IAF9C,cAErBR,EAFqB,gBAGNA,EAASC,OAHH,cAGrBC,EAHqB,yBAKpBA,EAAOX,SALa,kCAO3BY,QAAQC,IAAR,MAP2B,0DAAH,sDAWfK,EAAO,mCAAG,WAAOzB,GAAP,kGAEIe,MAAM,GAAD,OAAIH,EAAJ,kBAAiBZ,EAAjB,4BAAuCa,IAFhD,cAEbG,EAFa,gBAGAA,EAASC,OAHT,cAGbS,EAHa,yBAKZA,GALY,kCAOnBP,QAAQC,IAAR,MAPmB,0DAAH,sDAWPf,EAAU,mCAAG,WAAOL,GAAP,kGAECe,MAAM,GAAD,OAAIH,EAAJ,kBAAiBZ,EAAjB,4BAAuCa,IAF7C,cAEhBG,EAFgB,gBAGAA,EAASC,OAHT,cAGhBU,EAHgB,yBAKfA,GALe,kCAOtBR,QAAQC,IAAR,MAPsB,0DAAH,qD","sources":["pages/ReviewsPages/ReviewsPages.jsx","shared/api/apiMovies.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { getReviews } from \"shared/api/apiMovies\";\n  \nconst ReviewsPages = () => {\nconst [state, setState] = useState({\n    item: {},\n    loading: false,\n    error: null,\n  });\n\n  // const params = useParams();\n  // console.log(params);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async() => {\n      try {\n        setState(prevState => ({\n          ...prevState,\n          loading: true,\n          error: null,\n      }));\n        const result = await getReviews(id);\n        setState(prevState => {\n          return {\n            ...prevState,\n            item: result,\n          }\n        })\n      } catch (error) {\n        setState(prevState => ({\n          ...prevState,\n          error,\n        }))\n      }\n      finally {\n        setState(prevState => {\n          return {\n            ...prevState,\n            loading: false,\n          }\n        })\n      }\n    };\n\n    fetchCast();\n  }, [id, setState]);\n\n  const { results } = state.item;\n\n  return (\n    <div>\n      <ul>\n        {results.length > 0 ? results.map(({ id, author, content }) => (\n            <Li key={id}>\n              <h3>Author: {author}</h3>\n              <p>{content}</p>\n            </Li>\n          )) : <P>We don`t have any reviews for this movie</P>}\n      </ul>\n    </div>\n  )\n}\n\nconst P = styled.p`\n  margin: 12px;\n`\nconst Li = styled.li`\n  margin: 12px;\n`\n\nexport default ReviewsPages;","\nconst URL = 'https://api.themoviedb.org/3';\nconst KEY = 'b562b6919245407f9980120c8923230e';\n\nexport const getPopularMovies = async () => {\n  try {\n    const response = await fetch(`${URL}/trending/movie/day?api_key=${KEY}`);\n    const movies = await response.json();\n    // console.log(movies);\n    return movies.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getFullInfoMovie = async (id) => {\n  try {\n    const response = await fetch(`${URL}/movie/${id}?api_key=${KEY}`);\n    const movie = await response.json();\n    // console.log(movie);\n    return movie;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchMovies = async (query) => { \n  try {\n    const response = await fetch(`${URL}/search/movie?api_key=${KEY}&query=${query}`);\n    const movies = await response.json();\n    // console.log(movies);\n    return movies.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCast = async (id) => {\n  try {\n    const response = await fetch(`${URL}/movie/${id}/credits?api_key=${KEY}`);\n    const cast = await response.json();\n    // console.log(cast);\n    return cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviews = async (id) => {\n  try {\n    const response = await fetch(`${URL}/movie/${id}/reviews?api_key=${KEY}`);\n    const reviews = await response.json();\n    // console.log(reviews);\n    return reviews;\n  } catch (error) {\n    console.log(error);\n  }\n};"],"names":["P","styled","Li","useState","item","loading","error","state","setState","id","useParams","useEffect","fetchCast","prevState","getReviews","result","results","length","map","author","content","URL","KEY","getPopularMovies","fetch","response","json","movies","console","log","getFullInfoMovie","movie","getSearchMovies","query","getCast","cast","reviews"],"sourceRoot":""}